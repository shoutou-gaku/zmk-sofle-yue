#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        ToL3 {
            bindings = <&mo 3>;
            key-positions = <55 56>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC           &kp N1        &kp N2        &kp N3  &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8     &kp N9   &kp N0                 &kp BACKSPACE
&kp TAB           &kp Q         &kp W         &kp E   &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I      &kp O    &kp P                  &kp MINUS
&kp LEFT_CONTROL  &kp A         &kp S         &kp D   &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K      &kp L    &kp SEMI               &kp COLON
&kp LSHFT         &kp Z         &kp X         &kp C   &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH               &kp BACKSLASH
&kp C_MUTE        &kp LEFT_WIN  &kp LEFT_ALT  &mo 2   &mo 1   &kp SPACE    &kp ENTER        &kp SPACE  &mo 1   &mo 2      &mo 2    &mt RIGHT_SHIFT ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE      &kp F1          &kp F2         &kp F3          &kp F4           &kp F5       &mmv MOVE_UP     &kp F6         &kp F7       &kp F8     &kp F9         &kp F10  &kp F11
&kp LG(SPACE)  &kp LANGUAGE_5  &kp PAGE_UP    &kp UP_ARROW    &kp PAGE_DOWN    &mkp RCLK    &mmv MOVE_DOWN   &trans         &kp PAGE_UP  &kp UP     &kp PAGE_DOWN  &trans   &kp F12
&trans         &kp HOME        &kp LEFT       &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END      &mmv MOVE_LEFT   &kp HOME       &kp LEFT     &kp DOWN   &kp RIGHT      &kp END  &trans
&trans         &kp ENTER       &kp LA(ENTER)  &kp BACKSPACE   &kp DELETE       &mkp LCLK    &mmv MOVE_RIGHT  &kp BACKSPACE  &kp DELETE   &kp LC(C)  &kp LC(V)      &trans   &trans
&kp C_MUTE     &trans          &trans         &trans          &trans           &trans       &mkp LCLK        &trans         &trans       &trans     &trans         &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans         &none           &none            &none   &none   &none     &mmv MOVE_UP     &none   &none   &none       &none   &none   &none
&kp LG(SPACE)  &kp LANGUAGE_5  &kp LC(PAGE_UP)  &none   &none   &none     &mmv MOVE_DOWN   &none   &none   &none       &none   &none   &none
&trans         &none           &none            &none   &none   &none     &mmv MOVE_LEFT   &none   &none   &none       &none   &none   &none
&trans         &none           &none            &none   &none   &none     &mmv MOVE_RIGHT  &none   &none   &sys_reset  &none   &none   &none
&trans         &trans          &trans           &trans  &trans  &trans    &mkp LCLK        &trans  &trans  &trans      &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &out OUT_USB  &bt BT_CLR_ALL  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans        &trans          &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans        &trans          &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans        &trans          &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans        &trans
            >;
        };
    };
};
